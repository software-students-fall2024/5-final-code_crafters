name: Python Test Workflow - Machine Learing Client

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Repeat the same job for each subsystem in the following subdirectories
        subdir: [machine-learning-client]

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12" # Update Python version as needed

      # Step 3: Install pipenv and dependencies
      - name: Install dependencies
        if: ${{ hashFiles(format('{0}/**/*.py', matrix.subdir)) != '' }}
        run: |
          cd ${{ matrix.subdir }}
          python -m pip install --upgrade pip
          python -m pip install pipenv
          pipenv install --dev

      # Step 4: Run pytest to execute unit tests for each subdirectory
      - name: Run pytest
        if: ${{ hashFiles(format('{0}/**/*.py', matrix.subdir)) != '' }}
        run: |
          cd ${{ matrix.subdir }}
          pipenv run pytest --cov=. --cov-report xml

      # Step 5: Upload coverage report (optional, if you need coverage report)
      - name: Upload coverage to Codecov
        if: ${{ hashFiles(format('{0}/**/*.py', matrix.subdir)) != '' }}
        uses: codecov/codecov-action@v3
        with:
          files: ${{ matrix.subdir }}/coverage.xml
          flags: ${{ matrix.subdir }}
          name: codecov-coverage-report-${{ matrix.subdir }}
      
      # Step 6: login to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./machine-learning-client
          push: true
          tags: dave147/whatscooking-web:latest

      # Build and push the Docker image
      - name: Deploy to Existing DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          debug: true
          script: |
            # Navigate to the deployment directory
            cd /root/5-final-code_crafters

            # Pull the latest images from Docker Hub
            docker pull dave147/whatscooking-web:latest
            docker pull dave147/whatscooking-db:latest

            # Restart the containers using docker-compose
            docker-compose down
            docker-compose up -d