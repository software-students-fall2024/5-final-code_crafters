name: Python Test Workflow - Database Service

on:
  push:
    paths:
      - 'db-service/**'
  pull_request:
    paths:
      - 'db-service/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        subdir: [db-service]
    
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
    
    env:
      ENV: "TEST"
      TEST_MONGO_URI: ${{ secrets.TEST_MONGO_URI }}
      TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
      DB_NAME: ${{ secrets.DB_NAME }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          cd ${{ matrix.subdir }}
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pymongo python-dotenv flask werkzeug certifi
      
      - name: Create env file
        run: |
          cd ${{ matrix.subdir }}
          echo "ENV=TEST" > .env
          echo "TEST_MONGO_URI=${{ secrets.TEST_MONGO_URI }}" >> .env
          echo "TEST_DB_NAME=${{ secrets.TEST_DB_NAME }}" >> .env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
      
      - name: Run pytest
        run: |
          cd ${{ matrix.subdir }}
          pytest test_db_service.py -v --cov=db_service --cov-report=xml --cov-report=term-missing
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ${{ matrix.subdir }}/coverage.xml
          flags: ${{ matrix.subdir }}
          name: codecov-coverage-report-${{ matrix.subdir }}